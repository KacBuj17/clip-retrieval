services:
  clip-init:
    image: clip-retrieval:latest
    container_name: clip-init
    profiles: ["init"]
    env_file: .env
    entrypoint: >
      /bin/bash -c "
        sleep 5;
        source .venv/bin/activate;
        cd /app/test_and_scripts/test;
        if [ ! -f output_folder/.init_done ]; then
          clip-retrieval end2end test_10000.parquet output_folder;
          touch output_folder/.init_done;
        else
          echo 'Init already done, skipping';
        fi
      "
    restart: "no"
    shm_size: 2g
    volumes:
      - clip-data:/app/test_and_scripts/test/output_folder
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities: [gpu]


  clip-back:
    image: clip-retrieval:latest
    container_name: clip-retrieval
    env_file: .env
    ports:
      - "8000:8000"
    command: >
      bash -c "
        sleep 5;
        source .venv/bin/activate;
        cd /app/test_and_scripts/test;
        clip-retrieval back --port 8000 --indices_paths output_folder/indices_paths.json
      "
    restart: on-failure
    shm_size: 2g
    volumes:
      - clip-data:/app/test_and_scripts/test/output_folder
    deploy:
     resources:
       reservations:
         devices:
         - driver: nvidia
           count: all
           capabilities: [gpu]

  requests-client:
    image: clip-retrieval:latest
    container_name: requests-client
    env_file: .env
    volumes:
      - clip-scripts:/app/test_and_scripts/scripts
    command: >
      bash -c "
        sleep 5;
        source .venv/bin/activate;
        python /app/test_and_scripts/scripts/run_requests_from_excel.py
      "
    depends_on:
      - clip-back
    restart: on-failure
    shm_size: 512m

volumes:
  clip-data:
  clip-scripts: